{"version":3,"sources":["popUp.js","Content.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["PopUp","state","form_err","this","props","showBox","setState","err","react_default","a","createElement","className","id","action","type","name","onClick","submitForm","bind","closeBox","Component","Content","activeImg","showHidden","num","prevState","bagNum","image_large","hidden_text","_this2","classList1","classList2","classList3","alt","src","imgActive","showHiddenText","addCart","Header","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClose","assertThisInitialized","handleBags","isSignUp","isPopUp","e","popBox","src_popUp","handleSignUp","handleLogin","src_Content","App","src_Header","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c297124f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './style/popUp.css';\nimport './style/popUp_mobile.css';\n\nclass PopUp extends Component {\n  state = {\n      form_err: false,\n  };\n\n  closeBox() {\n    this.props.showBox(false);\n  }\n  \n  // for now, show error message for every submission of form\n  submitForm() {\n    this.setState({form_err: true});\n  }\n\n  render() {\n    let err;\n    if (this.state.form_err) {\n      err = <div className=\"err_msg\">Invalid username or password.</div>;\n    }\n\n    return (\n        <div className=\"popUp\" id=\"popBox\">\n          <form className=\"box\">\n            <div className=\"form_title\">{this.props.action}</div>\n            {err}\n            User Name:\n            <input type=\"text\" name=\"username\" />\n            Password:\n            <input type=\"password\" name=\"password\" />\n            <button type=\"button\" onClick={this.submitForm.bind(this)} className=\"button form_btn\">{this.props.action}</button>\n            <div className=\"close change_pointer\" onClick={this.closeBox.bind(this)}>&times;</div>\n          </form>\n        </div>\n    );\n  }\n}\n\nexport default PopUp;\n","import React, { Component } from 'react';\nimport './style/content.css';\nimport './style/content_mobile.css';\n\nclass Content extends Component {\n\n// image url\n// 1: https://images-na.ssl-images-amazon.com/images/I/41b5yBqfnJL.jpg\n// 2: https://images-na.ssl-images-amazon.com/images/I/616gdgJ7FAL._UX342_.jpg\n// 3: https://images-na.ssl-images-amazon.com/images/I/410o%2BPU9kVL.jpg\n\n  state = {\n    activeImg: 1,\n    showHidden: false,\n  };\n  \n  imgActive(num) {\n    // num is the number of images (1 - 3)\n    this.setState({activeImg: num});\n  }\n  \n  showHiddenText() {\n    this.setState((prevState, props) => ({\n        showHidden: !prevState.showHidden}));\n  }\n  \n  addCart() {\n    // everytime user click this button, bag + 1\n    this.props.bagNum();\n  }\n\n  render() {\n    // add css class to the selected images(small)\n    let classList1 = \"img_small change_pointer\";\n    let classList2 = \"img_small change_pointer\";\n    let classList3 = \"img_small change_pointer\";\n    let image_large;\n\n    // and conditional render large image\n    if (this.state.activeImg === 1) {\n      classList1 += \" img_selected\";\n      image_large = <img alt=\"image_large\" src=\"https://images-na.ssl-images-amazon.com/images/I/41b5yBqfnJL.jpg\" className=\"img_large\" />;\n    } else if (this.state.activeImg === 2) {\n      classList2 += \" img_selected\";\n      image_large = <img alt=\"image_large\" src=\"https://images-na.ssl-images-amazon.com/images/I/616gdgJ7FAL._UX342_.jpg\" className=\"img_large\" />;\n    } else {\n      classList3 += \" img_selected\";\n      image_large = <img alt=\"image_large\" src=\"https://images-na.ssl-images-amazon.com/images/I/410o%2BPU9kVL.jpg\" className=\"img_large\" />;\n    }\n    \n    // control hidden text\n    let hidden_text;\n    if (this.state.showHidden) {\n      hidden_text = <p className=\"hidden_details\">This is hidden text. This is hidden text. This is hidden text. This is hidden text.</p>;\n    }\n\n    return (\n        <div className=\"content\">\n\n            <div className=\"img_list\">\n                <img onClick={()=>this.imgActive(1)} alt=\"image1_small\" src=\"https://images-na.ssl-images-amazon.com/images/I/41b5yBqfnJL.jpg\" className={classList1} />\n                <img onClick={()=>this.imgActive(2)} alt=\"image2_small\" src=\"https://images-na.ssl-images-amazon.com/images/I/616gdgJ7FAL._UX342_.jpg\" className={classList2} />\n                <img onClick={()=>this.imgActive(3)} alt=\"image3_small\" src=\"https://images-na.ssl-images-amazon.com/images/I/410o%2BPU9kVL.jpg\" className={classList3} />\n            </div>\n            {image_large}\n            \n            <div className=\"details\">\n                <div className=\"item_title\">Brushed Gunmetal Olive</div>\n                <div className=\"review_block\">\n                    <div className=\"block_elmt underline\">6 Reviews</div>\n                    <div className=\"block_elmt underline change_pointer\">Add Your Review</div>\n                </div>\n                <div className=\"p item_text\">This watch is constructed with a sandblasted gunmetal stainless steel case, white face with minimalist silver indexing, and finished with an olive leather band. The Horse logo lettering on dial and at buckle closure.</div>\n                <div className=\"price\">$149.00</div>\n                <div className=\"item_details underline\">\n                    <div>Details & Specifications</div>\n                    <div className=\"span_text change_pointer\" onClick={this.showHiddenText.bind(this)}>+</div>\n                </div>\n                {hidden_text}\n                <div className=\"button change_pointer\" onClick={this.addCart.bind(this)}>Add to Cart</div>\n            </div>\n        \n        </div>\n    );\n  }\n}\n\nexport default Content;\n","import React, { Component } from 'react';\nimport PopUp from './popUp.js';\nimport Content from './Content.js';\nimport './style/header.css';\nimport './style/header_mobile.css';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleBags = this.handleBags.bind(this);\n\n    this.state = {\n        isSignUp: true,\n        isPopUp: false,\n        bagNum: 0,\n    };\n  }\n  \n  handleClose(e) {\n    // close the popBox\n    // e is boolean\n    this.setState({isPopUp: e});\n  }\n  \n  handleSignUp() {\n    this.setState({isSignUp: true, isPopUp: true});\n  }\n  \n  handleLogin() {\n    this.setState({isSignUp: false, isPopUp: true});\n  }\n  \n  handleBags() {\n    // add 1 for every operation\n    this.setState((prevState, props) => ({\n        bagNum: prevState.bagNum + 1}));\n  }\n  \n  render() {\n    // decide when to show a popBox\n    let popBox;\n    const isSignUp = this.state.isSignUp;\n    if (this.state.isPopUp) {\n        popBox = <PopUp action={isSignUp ? 'Sign Up' : 'Login'} showBox={this.handleClose} />;\n    }\n\n    return (\n      <div>\n        <header>\n            <div className=\"user_profile\">\n                <div className=\"profile_block change_pointer\" id=\"signUp\" onClick={this.handleSignUp.bind(this)}>Sign Up</div>\n                <div className=\"profile_block change_pointer\" onClick={this.handleLogin.bind(this)}>Login</div>\n            </div>\n            \n            <div className=\"neg_bar\">\n                <div id=\"title\">THE HORSE</div>\n                \n                <div className=\"sub_titles\">\n                  <div className=\"block_elmt change_pointer\">Time Tellers</div>\n                  <div className=\"block_elmt change_pointer\">Leather Goods</div>\n                  <div className=\"block_elmt change_pointer\">Liftstyle</div>\n                </div>\n                \n                <div className=\"menu\">\n                    <div className=\"block_elmt change_pointer\">Lookbook</div>\n                    <div className=\"block_elmt change_pointer\">Our Story</div>\n                    <div className=\"block_elmt change_pointer\">Bag (<span className=\"bag_num\">{this.state.bagNum}</span>)</div>\n                </div>\n            </div>\n        </header>\n        \n        <Content bagNum={this.handleBags} />\n        {popBox}\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Header from './Header.js';\nimport './style/main.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">       \n        <Header />             \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}